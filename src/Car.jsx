/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
import { useLayoutEffect, useMemo } from "react";
import { CarPaintMaterial } from "./Carpaint";
import { COLORS, useApp } from "./state";

function getRandomHexColor() {
  return `#${Math.floor(Math.random() * 16777215)
    .toString(16)
    .padStart(6, "0")}`;
}

export function Car(props) {
  const { nodes, materials } = useGLTF("/demo-2025-car-paint/car.glb");

  const paintBaseMaterial = useMemo(
    () => materials.paint.clone(),
    [materials.paint]
  );

  useLayoutEffect(() => () => paintBaseMaterial.dispose(), [paintBaseMaterial]);

  const colorIndex = useApp((state) => state.colorIndex);
  const isStockMaterial = useApp((state) => state.isStockMaterial);
  const color = COLORS[colorIndex] || {
    color: getRandomHexColor(),
    flake: getRandomHexColor(),
    perl: getRandomHexColor(),
  };

  return (
    <group
      name="car"
      {...props}
      dispose={null}
      rotation-y={-Math.PI / 2}
      position={[0.15, 0, 0]}
    >
      <mesh castShadow geometry={nodes.Object_47.geometry}>
        <meshStandardMaterial color="#121212" roughness={0} metalness={0} />
      </mesh>
      <mesh
        castShadow
        geometry={nodes.Object_51.geometry}
        material={materials["930_chromes"]}
      />
      <mesh
        castShadow
        geometry={nodes.Object_64.geometry}
        material={materials["930_stickers"]}
      />
      <mesh
        castShadow
        geometry={nodes.Object_88.geometry}
        material={materials["930_rim"]}
      />
      <mesh
        castShadow
        geometry={nodes.Object_89.geometry}
        material={materials["930_tire"]}
      />
      <mesh
        castShadow
        geometry={nodes.Object_95.geometry}
        // material={materials["930_lights_refraction"]}
      >
        <meshStandardMaterial
          emissive="#ffe7a0"
          emissiveIntensity={10}
          toneMapped={false}
        />
      </mesh>
      <mesh
        castShadow
        geometry={nodes.Object_105.geometry}
        material={materials["930_plastics"]}
      />
      <mesh castShadow geometry={nodes.Object_113.geometry}>
        {isStockMaterial ? (
          <meshPhysicalMaterial
            roughness={0.2}
            metalness={1}
            clearcoat={1}
            clearcoatRoughness={0}
            color={color.color}
            aoMap={paintBaseMaterial.aoMap}
            normalMap={paintBaseMaterial.normalMap}
          />
        ) : (
          <CarPaintMaterial
            baseMaterial={paintBaseMaterial}
            color={color.color}
            colorFlakes={color.flake}
            colorPerl={color.perl}
          />
        )}
      </mesh>
      <mesh
        castShadow
        geometry={nodes.Object_128.geometry}
        material={materials.black}
      />
      <mesh
        castShadow
        geometry={nodes.Object_130.geometry}
        material={materials["930_lights"]}
      />
    </group>
  );
}
